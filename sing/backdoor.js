import { getServers } from "/inc/include.js";
/** @param {NS} ns **/
export async function main(ns) {
    /* Script to copy "SmolHack.js" to all servers with ram */
    ns.disableLog('ALL');
    ns.tail();
    ns.print("---Backdooring servers---");
    while (true) {
        var scanned = getServers(ns, false);
        var count = 0;
        for (let i = 0; i < scanned.length; i++) {
            if (ns.getServer(scanned[i]).backdoorInstalled) {
                continue;
            }
            else if (ns.getServer(scanned[i]).requiredHackingSkill <= ns.getHackingLevel() &&
                ns.getServer(scanned[i]).hasAdminRights) {
                count++;
                ns.print("Backdooring " + scanned[i]);
                let host = scanned[i];
                let path = [host];
                while (path[0] !== "home")
                    path.unshift(ns.scan(path[0])[0]);
                path.forEach(hop => ns.singularity.connect(hop));
                await ns.singularity.installBackdoor();
                ns.singularity.connect("home");
            }
        }
        if (count > 0)
            ns.print("Backdoor on " + count + " servers complete.\nSleeping...");
        await ns.asleep(60000);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFja2Rvb3IuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvc2luZy9iYWNrZG9vci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFN0Msc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQUU7SUFDM0IsMERBQTBEO0lBQzFELEVBQUUsQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDckIsRUFBRSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ1YsRUFBRSxDQUFDLEtBQUssQ0FBQywyQkFBMkIsQ0FBQyxDQUFDO0lBQ3RDLE9BQU8sSUFBSSxFQUFFO1FBQ1gsTUFBTSxPQUFPLEdBQUcsVUFBVSxDQUFDLEVBQUUsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUN0QyxJQUFJLEtBQUssR0FBRyxDQUFDLENBQUM7UUFDZCxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsT0FBTyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUN2QyxJQUFJLEVBQUUsQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsaUJBQWlCLEVBQUU7Z0JBQzlDLFNBQVM7YUFDVjtpQkFBTSxJQUNMLEVBQUUsQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsb0JBQW9CLElBQUksRUFBRSxDQUFDLGVBQWUsRUFBRTtnQkFDckUsRUFBRSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxjQUFjLEVBQUU7Z0JBQ3pDLEtBQUssRUFBRSxDQUFDO2dCQUNSLEVBQUUsQ0FBQyxLQUFLLENBQUMsY0FBYyxHQUFHLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUN0QyxJQUFJLElBQUksR0FBRyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ3RCLElBQUksSUFBSSxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ2xCLE9BQU8sSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLE1BQU07b0JBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQzdELElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO2dCQUNqRCxNQUFNLEVBQUUsQ0FBQyxXQUFXLENBQUMsZUFBZSxFQUFFLENBQUM7Z0JBQ3ZDLEVBQUUsQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO2FBQ2hDO1NBQ0Y7UUFDRCxJQUFHLEtBQUssR0FBRyxDQUFDO1lBQUUsRUFBRSxDQUFDLEtBQUssQ0FBQyxjQUFjLEdBQUMsS0FBSyxHQUFDLDhDQUE4QyxDQUFDLENBQUM7UUFDNUYsTUFBTSxFQUFFLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0tBQ3pCO0FBQ0gsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldFNlcnZlcnMgfSBmcm9tIFwiL2luYy9pbmNsdWRlLmpzXCI7XG5cbi8qKiBAcGFyYW0ge05TfSBucyAqKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XG4gIC8qIFNjcmlwdCB0byBjb3B5IFwiU21vbEhhY2suanNcIiB0byBhbGwgc2VydmVycyB3aXRoIHJhbSAqL1xuICBucy5kaXNhYmxlTG9nKCdBTEwnKTtcbiAgbnMudGFpbCgpO1xuICBucy5wcmludChcIi0tLUJhY2tkb29yaW5nIHNlcnZlcnMtLS1cIik7XG4gIHdoaWxlICh0cnVlKSB7XG4gICAgY29uc3Qgc2Nhbm5lZCA9IGdldFNlcnZlcnMobnMsIGZhbHNlKTtcbiAgICB2YXIgY291bnQgPSAwO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc2Nhbm5lZC5sZW5ndGg7IGkrKykge1xuICAgICAgaWYgKG5zLmdldFNlcnZlcihzY2FubmVkW2ldKS5iYWNrZG9vckluc3RhbGxlZCkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH0gZWxzZSBpZiAoXG4gICAgICAgIG5zLmdldFNlcnZlcihzY2FubmVkW2ldKS5yZXF1aXJlZEhhY2tpbmdTa2lsbCA8PSBucy5nZXRIYWNraW5nTGV2ZWwoKSAmJlxuICAgICAgICBucy5nZXRTZXJ2ZXIoc2Nhbm5lZFtpXSkuaGFzQWRtaW5SaWdodHMpIHtcbiAgICAgICAgY291bnQrKztcbiAgICAgICAgbnMucHJpbnQoXCJCYWNrZG9vcmluZyBcIiArIHNjYW5uZWRbaV0pO1xuICAgICAgICBsZXQgaG9zdCA9IHNjYW5uZWRbaV07XG4gICAgICAgIGxldCBwYXRoID0gW2hvc3RdO1xuICAgICAgICB3aGlsZSAocGF0aFswXSAhPT0gXCJob21lXCIpIHBhdGgudW5zaGlmdChucy5zY2FuKHBhdGhbMF0pWzBdKTtcbiAgICAgICAgcGF0aC5mb3JFYWNoKGhvcCA9PiBucy5zaW5ndWxhcml0eS5jb25uZWN0KGhvcCkpO1xuICAgICAgICBhd2FpdCBucy5zaW5ndWxhcml0eS5pbnN0YWxsQmFja2Rvb3IoKTtcbiAgICAgICAgbnMuc2luZ3VsYXJpdHkuY29ubmVjdChcImhvbWVcIik7XG4gICAgICB9XG4gICAgfVxuICAgIGlmKGNvdW50ID4gMCkgbnMucHJpbnQoXCJCYWNrZG9vciBvbiBcIitjb3VudCtcIiBzZXJ2ZXJzIGNvbXBsZXRlLlxcblNsZWVwaW5nIGZvciAxMCBtaW51dGVzLlwiKTtcbiAgICBhd2FpdCBucy5hc2xlZXAoNjAwMDAwKTtcbiAgfVxufSJdfQ==